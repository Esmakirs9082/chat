/**
 * Application Constants
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @fileoverview –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, —Ç–∏–ø—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è AI-—á–∞—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

// ===========================================
// TypeScript Types & Interfaces
// ===========================================

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
 * @interface SubscriptionPlan
 */
export interface SubscriptionPlan {
  /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞–Ω–∞ */
  id: string;
  /** –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è –ø–ª–∞–Ω–∞ */
  name: string;
  /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–ª–∞–Ω–∞ */
  displayName: string;
  /** –¶–µ–Ω–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê */
  price: number;
  /** –í–∞–ª—é—Ç–∞ */
  currency: string;
  /** –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø–ª–∞–Ω–∞ */
  features: string[];
  /** –õ–∏–º–∏—Ç—ã –ø–ª–∞–Ω–∞ */
  limits: {
    /** –°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å (-1 = –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ) */
    messagesPerDay: number;
    /** –°–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ */
    charactersPerMessage: number;
    /** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π */
    customCharacters: number;
    /** –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ */
    fileUploads: boolean;
    /** –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ */
    prioritySupport: boolean;
  };
  /** –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–ª–∞–Ω (–¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤ UI) */
  popular?: boolean;
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @interface CharacterCategory
 */
export interface CharacterCategory {
  /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
  id: string;
  /** –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
  name: string;
  /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
  displayName: string;
  /** –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */
  description: string;
  /** –≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞ */
  icon: string;
  /** –°–æ–¥–µ—Ä–∂–∏—Ç NSFW –∫–æ–Ω—Ç–µ–Ω—Ç */
  nsfw: boolean;
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @interface PersonalityTrait
 */
export interface PersonalityTrait {
  /** –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–µ—Ä—Ç—ã */
  id: string;
  /** –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è —á–µ—Ä—Ç—ã */
  name: string;
  /** –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —á–µ—Ä—Ç—ã */
  displayName: string;
  /** –û–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä—Ç—ã */
  description: string;
  /** –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è —á–µ—Ä—Ç–∞ */
  opposite?: string;
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —è–∑—ã–∫–∞
 * @interface Language
 */
export interface Language {
  /** –ö–æ–¥ —è–∑—ã–∫–∞ (ISO 639-1) */
  code: string;
  /** –ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ */
  name: string;
  /** –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ */
  displayName: string;
  /** –§–ª–∞–≥ —ç–º–æ–¥–∑–∏ */
  flag?: string;
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
 * @interface FileUploadConfig
 */
export interface FileUploadConfig {
  /** –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö */
  maxSize: number;
  /** –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ MIME —Ç–∏–ø—ã */
  allowedTypes: string[];
  /** –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è */
  extensions: string[];
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @interface ValidationPattern
 */
export interface ValidationPattern {
  /** –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ */
  pattern: RegExp;
  /** –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */
  message: string;
  /** –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è */
  example?: string;
}

// ===========================================
// Subscription Plans
// ===========================================

export const SUBSCRIPTION_PLANS: Record<string, SubscriptionPlan> = {
  FREE: {
    id: 'free',
    name: 'free',
    displayName: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π',
    price: 0,
    currency: 'USD',
    features: ['–ë–∞–∑–æ–≤—ã–π —á–∞—Ç —Å AI', '5 –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'],
    limits: {
      messagesPerDay: 10,
      charactersPerMessage: 500,
      customCharacters: 1,
      fileUploads: false,
      prioritySupport: false,
    },
  },
  BASIC: {
    id: 'basic',
    name: 'basic',
    displayName: '–ë–∞–∑–æ–≤—ã–π',
    price: 9.99,
    currency: 'USD',
    features: [
      '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —á–∞—Ç —Å AI',
      '50+ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
      '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
      '–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
      'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    ],
    limits: {
      messagesPerDay: 100,
      charactersPerMessage: 1000,
      customCharacters: 5,
      fileUploads: true,
      prioritySupport: false,
    },
    popular: true,
  },
  PREMIUM: {
    id: 'premium',
    name: 'premium',
    displayName: '–ü—Ä–µ–º–∏—É–º',
    price: 19.99,
    currency: 'USD',
    features: [
      '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —á–∞—Ç —Å AI',
      '–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
      '–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º',
    ],
    limits: {
      messagesPerDay: -1, // unlimited
      charactersPerMessage: 2000,
      customCharacters: -1, // unlimited
      fileUploads: true,
      prioritySupport: true,
    },
  },
} as const;

// ===========================================
// Character Categories
// ===========================================

export const CHARACTER_CATEGORIES: Record<string, CharacterCategory> = {
  ROMANCE: {
    id: 'romance',
    name: 'romance',
    displayName: '–†–æ–º–∞–Ω—Ç–∏–∫–∞',
    description: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –¥–ª—è —Ñ–ª–∏—Ä—Ç–∞ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π',
    icon: 'üíï',
    nsfw: true,
  },
  FANTASY: {
    id: 'fantasy',
    name: 'fantasy',
    displayName: '–§—ç–Ω—Ç–µ–∑–∏',
    description: '–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å—É—â–µ—Å—Ç–≤–∞, —ç–ª—å—Ñ—ã, –¥—Ä–∞–∫–æ–Ω—ã',
    icon: 'üîÆ',
    nsfw: false,
  },
  ANIME: {
    id: 'anime',
    name: 'anime',
    displayName: '–ê–Ω–∏–º–µ',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤ —Å—Ç–∏–ª–µ –∞–Ω–∏–º–µ –∏ –º–∞–Ω–≥–∏',
    icon: 'üéå',
    nsfw: false,
  },
  HISTORICAL: {
    id: 'historical',
    name: 'historical',
    displayName: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —ç–ø–æ—Ö –∏ –∫—É–ª—å—Ç—É—Ä',
    icon: 'üèõÔ∏è',
    nsfw: false,
  },
  HORROR: {
    id: 'horror',
    name: 'horror',
    displayName: '–£–∂–∞—Å—ã',
    description: '–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏ –ø—É–≥–∞—é—â–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
    icon: 'üëª',
    nsfw: false,
  },
  COMEDY: {
    id: 'comedy',
    name: 'comedy',
    displayName: '–ö–æ–º–µ–¥–∏—è',
    description: '–í–µ—Å–µ–ª—ã–µ –∏ –∑–∞–±–∞–≤–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
    icon: 'üòÇ',
    nsfw: false,
  },
  BUSINESS: {
    id: 'business',
    name: 'business',
    displayName: '–ë–∏–∑–Ω–µ—Å',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∏',
    icon: 'üíº',
    nsfw: false,
  },
  EDUCATIONAL: {
    id: 'educational',
    name: 'educational',
    displayName: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    description: '–£—á–∏—Ç–µ–ª—è –∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö',
    icon: 'üìö',
    nsfw: false,
  },
  GAMING: {
    id: 'gaming',
    name: 'gaming',
    displayName: '–ì–µ–π–º–µ—Ä—ã',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏–∑ –≤–∏–¥–µ–æ–∏–≥—Ä –∏ –≥–µ–π–º–∏–Ω–≥–∞',
    icon: 'üéÆ',
    nsfw: false,
  },
  CELEBRITIES: {
    id: 'celebrities',
    name: 'celebrities',
    displayName: '–ó–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–∏',
    description: '–í–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏',
    icon: '‚≠ê',
    nsfw: false,
  },
} as const;

// ===========================================
// Message Limits
// ===========================================

export const MESSAGE_LIMITS = {
  FREE: {
    messagesPerDay: 10,
    charactersPerMessage: 500,
    resetHour: 0, // UTC midnight
  },
  BASIC: {
    messagesPerDay: 100,
    charactersPerMessage: 1000,
    resetHour: 0,
  },
  PREMIUM: {
    messagesPerDay: -1, // unlimited
    charactersPerMessage: 2000,
    resetHour: 0,
  },
  // Global limits
  MIN_MESSAGE_LENGTH: 1,
  MAX_MESSAGE_LENGTH: 2000,
  TYPING_TIMEOUT: 30000, // 30 seconds
} as const;

// ===========================================
// API Endpoints
// ===========================================

export const API_ENDPOINTS = {
  // Authentication
  AUTH: {
    LOGIN: '/auth/login',
    REGISTER: '/auth/register',
    LOGOUT: '/auth/logout',
    REFRESH: '/auth/refresh',
    VERIFY_EMAIL: '/auth/verify-email',
    RESET_PASSWORD: '/auth/reset-password',
    CHANGE_PASSWORD: '/auth/change-password',
  },

  // User Management
  USER: {
    PROFILE: '/user/profile',
    UPDATE_PROFILE: '/user/profile',
    DELETE_ACCOUNT: '/user/delete',
    PREFERENCES: '/user/preferences',
    STATISTICS: '/user/statistics',
  },

  // Characters
  CHARACTERS: {
    LIST: '/characters',
    GET: '/characters/:id',
    CREATE: '/characters',
    UPDATE: '/characters/:id',
    DELETE: '/characters/:id',
    CATEGORIES: '/characters/categories',
    SEARCH: '/characters/search',
    FEATURED: '/characters/featured',
  },

  // Chat
  CHAT: {
    CONVERSATIONS: '/chat/conversations',
    MESSAGES: '/chat/conversations/:id/messages',
    SEND_MESSAGE: '/chat/conversations/:id/messages',
    DELETE_CONVERSATION: '/chat/conversations/:id',
    TYPING: '/chat/conversations/:id/typing',
  },

  // Subscriptions
  SUBSCRIPTIONS: {
    PLANS: '/subscriptions/plans',
    CURRENT: '/subscriptions/current',
    SUBSCRIBE: '/subscriptions/subscribe',
    CANCEL: '/subscriptions/cancel',
    UPGRADE: '/subscriptions/upgrade',
    BILLING_HISTORY: '/subscriptions/billing',
  },

  // File Upload
  UPLOAD: {
    AVATAR: '/upload/avatar',
    CHARACTER_IMAGE: '/upload/character',
    DOCUMENT: '/upload/document',
    VOICE: '/upload/voice',
  },

  // Admin (if needed)
  ADMIN: {
    USERS: '/admin/users',
    CHARACTERS: '/admin/characters',
    ANALYTICS: '/admin/analytics',
  },
} as const;

// Placeholder for additional constants sections
// These will be implemented in subsequent tasks

// ===========================================
// Personality Traits
// ===========================================

export const PERSONALITY_TRAITS: Record<string, PersonalityTrait> = {
  FRIENDLY: {
    id: 'friendly',
    name: 'friendly',
    displayName: '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π',
    description: '–û—Ç–∫—Ä—ã—Ç—ã–π, –ø—Ä–∏–≤–µ—Ç–ª–∏–≤—ã–π –∏ –ª–µ–≥–∫–∏–π –≤ –æ–±—â–µ–Ω–∏–∏',
    opposite: 'cold',
  },
  MYSTERIOUS: {
    id: 'mysterious',
    name: 'mysterious',
    displayName: '–ó–∞–≥–∞–¥–æ—á–Ω—ã–π',
    description: '–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π, –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–π, —Å–∫—Ä—ã–≤–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã',
    opposite: 'transparent',
  },
  FLIRTY: {
    id: 'flirty',
    name: 'flirty',
    displayName: '–§–ª–∏—Ä—Ç—É—é—â–∏–π',
    description: '–ö–æ–∫–µ—Ç–ª–∏–≤—ã–π, –æ–±–∞—è—Ç–µ–ª—å–Ω—ã–π, –ª—é–±–∏—Ç —Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å',
    opposite: 'reserved',
  },
  WISE: {
    id: 'wise',
    name: 'wise',
    displayName: '–ú—É–¥—Ä—ã–π',
    description: '–£–º–Ω—ã–π, –æ–ø—ã—Ç–Ω—ã–π, –¥–∞–µ—Ç —Ü–µ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã',
    opposite: 'naive',
  },
  PLAYFUL: {
    id: 'playful',
    name: 'playful',
    displayName: '–ò–≥—Ä–∏–≤—ã–π',
    description: '–í–µ—Å–µ–ª—ã–π, —à–∞–ª–æ–≤–ª–∏–≤—ã–π, –ª—é–±–∏—Ç —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
    opposite: 'serious',
  },
  SERIOUS: {
    id: 'serious',
    name: 'serious',
    displayName: '–°–µ—Ä—å–µ–∑–Ω—ã–π',
    description: '–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω—ã–π, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π, –¥–µ–ª–æ–≤–æ–π',
    opposite: 'playful',
  },
  CONFIDENT: {
    id: 'confident',
    name: 'confident',
    displayName: '–£–≤–µ—Ä–µ–Ω–Ω—ã–π',
    description: '–°–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω—ã–π, —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π, –ª–∏–¥–µ—Ä –ø–æ –Ω–∞—Ç—É—Ä–µ',
    opposite: 'insecure',
  },
  SHY: {
    id: 'shy',
    name: 'shy',
    displayName: '–ó–∞—Å—Ç–µ–Ω—á–∏–≤—ã–π',
    description: '–°–∫—Ä–æ–º–Ω—ã–π, —Ç–∏—Ö–∏–π, —Å—Ç–µ—Å–Ω—è–µ—Ç—Å—è –≤ –æ–±—â–µ–Ω–∏–∏',
    opposite: 'confident',
  },
  ROMANTIC: {
    id: 'romantic',
    name: 'romantic',
    displayName: '–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π',
    description: '–ù–µ–∂–Ω—ã–π, —Å—Ç—Ä–∞—Å—Ç–Ω—ã–π, –≤–µ—Ä–∏—Ç –≤ –Ω–∞—Å—Ç–æ—è—â—É—é –ª—é–±–æ–≤—å',
    opposite: 'cynical',
  },
  SARCASTIC: {
    id: 'sarcastic',
    name: 'sarcastic',
    displayName: '–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π',
    description: '–ò—Ä–æ–Ω–∏—á–Ω—ã–π, –æ—Å—Ç—Ä–æ—É–º–Ω—ã–π, –ª—é–±–∏—Ç –ø–æ–¥–∫–æ–ª–∫–∏',
    opposite: 'sincere',
  },
  CARING: {
    id: 'caring',
    name: 'caring',
    displayName: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π',
    description: '–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –¥–æ–±—Ä—ã–π, –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å',
    opposite: 'indifferent',
  },
  REBELLIOUS: {
    id: 'rebellious',
    name: 'rebellious',
    displayName: '–ë—É–Ω—Ç–∞—Ä—Å–∫–∏–π',
    description: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π, —Å–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, –ø—Ä–æ—Ç–∏–≤ –ø—Ä–∞–≤–∏–ª',
    opposite: 'obedient',
  },
  INTELLECTUAL: {
    id: 'intellectual',
    name: 'intellectual',
    displayName: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª',
    description: '–£–º–Ω—ã–π, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π, –ª—é–±–∏—Ç —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤–æ–≤–∞—Ç—å',
    opposite: 'simple',
  },
  ADVENTUROUS: {
    id: 'adventurous',
    name: 'adventurous',
    displayName: '–ê–≤–∞–Ω—Ç—é—Ä–Ω—ã–π',
    description: '–°–º–µ–ª—ã–π, –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ —Ä–∏—Å–∫',
    opposite: 'cautious',
  },
  CALM: {
    id: 'calm',
    name: 'calm',
    displayName: '–°–ø–æ–∫–æ–π–Ω—ã–π',
    description: '–£—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π, –Ω–µ —Ç–µ—Ä—è–µ—Ç —Å–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏—è',
    opposite: 'energetic',
  },
  ENERGETIC: {
    id: 'energetic',
    name: 'energetic',
    displayName: '–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π',
    description: '–ê–∫—Ç–∏–≤–Ω—ã–π, –ø–æ–ª–Ω—ã–π —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞ –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏–ª',
    opposite: 'calm',
  },
} as const;

// ===========================================
// Supported Languages
// ===========================================

export const SUPPORTED_LANGUAGES: Record<string, Language> = {
  RU: {
    code: 'ru',
    name: 'Russian',
    displayName: '–†—É—Å—Å–∫–∏–π',
    flag: 'üá∑üá∫',
  },
  EN: {
    code: 'en',
    name: 'English',
    displayName: 'English',
    flag: 'üá∫üá∏',
  },
  ES: {
    code: 'es',
    name: 'Spanish',
    displayName: 'Espa√±ol',
    flag: 'üá™üá∏',
  },
  FR: {
    code: 'fr',
    name: 'French',
    displayName: 'Fran√ßais',
    flag: 'üá´üá∑',
  },
  DE: {
    code: 'de',
    name: 'German',
    displayName: 'Deutsch',
    flag: 'üá©üá™',
  },
  IT: {
    code: 'it',
    name: 'Italian',
    displayName: 'Italiano',
    flag: 'üáÆüáπ',
  },
  PT: {
    code: 'pt',
    name: 'Portuguese',
    displayName: 'Portugu√™s',
    flag: 'üáµüáπ',
  },
  JA: {
    code: 'ja',
    name: 'Japanese',
    displayName: 'Êó•Êú¨Ë™û',
    flag: 'üáØüáµ',
  },
  KO: {
    code: 'ko',
    name: 'Korean',
    displayName: 'ÌïúÍµ≠Ïñ¥',
    flag: 'üá∞üá∑',
  },
  ZH: {
    code: 'zh',
    name: 'Chinese',
    displayName: '‰∏≠Êñá',
    flag: 'üá®üá≥',
  },
} as const;

// ===========================================
// File Upload Limits
// ===========================================

export const FILE_UPLOAD_LIMITS: Record<string, FileUploadConfig> = {
  AVATAR: {
    maxSize: 5 * 1024 * 1024, // 5MB
    allowedTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],
    extensions: ['.jpg', '.jpeg', '.png', '.webp'],
  },
  CHARACTER_IMAGE: {
    maxSize: 10 * 1024 * 1024, // 10MB
    allowedTypes: [
      'image/jpeg',
      'image/jpg',
      'image/png',
      'image/webp',
      'image/gif',
    ],
    extensions: ['.jpg', '.jpeg', '.png', '.webp', '.gif'],
  },
  DOCUMENT: {
    maxSize: 50 * 1024 * 1024, // 50MB
    allowedTypes: [
      'application/pdf',
      'text/plain',
      'application/msword',
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    ],
    extensions: ['.pdf', '.txt', '.doc', '.docx'],
  },
  VOICE: {
    maxSize: 25 * 1024 * 1024, // 25MB
    allowedTypes: ['audio/mpeg', 'audio/wav', 'audio/ogg', 'audio/webm'],
    extensions: ['.mp3', '.wav', '.ogg', '.webm'],
  },
} as const;

// Upload limits by subscription tier
export const UPLOAD_LIMITS_BY_TIER = {
  FREE: {
    avatar: true,
    characterImage: false,
    document: false,
    voice: false,
    maxFilesPerDay: 3,
  },
  BASIC: {
    avatar: true,
    characterImage: true,
    document: true,
    voice: false,
    maxFilesPerDay: 20,
  },
  PREMIUM: {
    avatar: true,
    characterImage: true,
    document: true,
    voice: true,
    maxFilesPerDay: -1, // unlimited
  },
} as const;

// ===========================================
// Validation Patterns
// ===========================================

export const REGEX_PATTERNS: Record<string, ValidationPattern> = {
  EMAIL: {
    pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
    message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å',
    example: 'user@example.com',
  },
  PASSWORD: {
    pattern:
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,
    message:
      '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è –∑–∞–≥–ª–∞–≤–Ω—ã–µ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã',
    example: 'MyPass123!',
  },
  USERNAME: {
    pattern: /^[a-zA-Z0-9_]{3,20}$/,
    message:
      '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è (3-20 —Å–∏–º–≤–æ–ª–æ–≤)',
    example: 'username123',
  },
  PHONE: {
    pattern: /^\+?[1-9]\d{1,14}$/,
    message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
    example: '+1234567890',
  },
  URL: {
    pattern: /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/,
    message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL',
    example: 'https://example.com',
  },
  CHARACTER_NAME: {
    pattern: /^[a-zA-Z–ê-–Ø–∞-—è0-9\s]{2,30}$/,
    message:
      '–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–æ–±–µ–ª—ã (2-30 —Å–∏–º–≤–æ–ª–æ–≤)',
    example: '–ê–Ω–Ω–∞ –°–º–∏—Ç',
  },
  DISPLAY_NAME: {
    pattern: /^[a-zA-Z–ê-–Ø–∞-—è0-9\s]{2,50}$/,
    message:
      '–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–æ–±–µ–ª—ã (2-50 —Å–∏–º–≤–æ–ª–æ–≤)',
    example: '–ú–æ–π –ü—Ä–æ—Ñ–∏–ª—å',
  },
  SLUG: {
    pattern: /^[a-z0-9-]+$/,
    message: 'Slug –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –¥–µ—Ñ–∏—Å—ã',
    example: 'my-character-name',
  },
  HEX_COLOR: {
    pattern: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,
    message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HEX —Ü–≤–µ—Ç',
    example: '#FF5733',
  },
  TAG: {
    pattern: /^[a-zA-Z–ê-–Ø–∞-—è0-9]{2,20}$/,
    message: '–¢–µ–≥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã (2-20 —Å–∏–º–≤–æ–ª–æ–≤)',
    example: '—Ä–æ–º–∞–Ω—Ç–∏–∫–∞',
  },
} as const;

// ===========================================
// Additional Types & Utility Constants
// ===========================================

// Subscription Plan Keys
export type SubscriptionPlanId = keyof typeof SUBSCRIPTION_PLANS;
export type CharacterCategoryId = keyof typeof CHARACTER_CATEGORIES;
export type PersonalityTraitId = keyof typeof PERSONALITY_TRAITS;
export type LanguageCode = keyof typeof SUPPORTED_LANGUAGES;
export type FileUploadType = keyof typeof FILE_UPLOAD_LIMITS;
export type ValidationPatternType = keyof typeof REGEX_PATTERNS;

// Application Status Constants
export const APP_STATUS = {
  LOADING: 'loading',
  READY: 'ready',
  ERROR: 'error',
  MAINTENANCE: 'maintenance',
} as const;

// Theme Constants
export const THEMES = {
  LIGHT: 'light',
  DARK: 'dark',
  AUTO: 'auto',
} as const;

// Chat Message Types
export const MESSAGE_TYPES = {
  TEXT: 'text',
  IMAGE: 'image',
  VOICE: 'voice',
  SYSTEM: 'system',
} as const;

// Animation Durations (ms)
export const ANIMATION_DURATION = {
  FAST: 150,
  NORMAL: 300,
  SLOW: 500,
  EXTRA_SLOW: 1000,
} as const;

// Breakpoints (matches Tailwind CSS)
export const BREAKPOINTS = {
  SM: 640,
  MD: 768,
  LG: 1024,
  XL: 1280,
  '2XL': 1536,
} as const;

// Z-Index Layers
export const Z_INDEX = {
  DROPDOWN: 10,
  STICKY: 20,
  FIXED: 30,
  MODAL_BACKDROP: 40,
  MODAL: 50,
  POPOVER: 60,
  TOOLTIP: 70,
  TOAST: 80,
} as const;

// Default Values
export const DEFAULTS = {
  AVATAR_SIZE: 40,
  CHARACTER_IMAGE_ASPECT_RATIO: '3/4',
  MESSAGES_PER_PAGE: 50,
  CHARACTERS_PER_PAGE: 24,
  SEARCH_DEBOUNCE_MS: 300,
  TYPING_INDICATOR_TIMEOUT: 30000,
  SESSION_TIMEOUT: 24 * 60 * 60 * 1000, // 24 hours
  MAX_CONVERSATION_TITLE_LENGTH: 50,
} as const;

// Error Codes
export const ERROR_CODES = {
  // Authentication
  UNAUTHORIZED: 'UNAUTHORIZED',
  SESSION_EXPIRED: 'SESSION_EXPIRED',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',

  // Subscription
  SUBSCRIPTION_REQUIRED: 'SUBSCRIPTION_REQUIRED',
  SUBSCRIPTION_EXPIRED: 'SUBSCRIPTION_EXPIRED',
  UPGRADE_REQUIRED: 'UPGRADE_REQUIRED',

  // Limits
  MESSAGE_LIMIT_EXCEEDED: 'MESSAGE_LIMIT_EXCEEDED',
  CHARACTER_LIMIT_EXCEEDED: 'CHARACTER_LIMIT_EXCEEDED',
  FILE_SIZE_EXCEEDED: 'FILE_SIZE_EXCEEDED',
  FILE_TYPE_NOT_ALLOWED: 'FILE_TYPE_NOT_ALLOWED',

  // General
  SERVER_ERROR: 'SERVER_ERROR',
  NETWORK_ERROR: 'NETWORK_ERROR',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  NOT_FOUND: 'NOT_FOUND',
  RATE_LIMITED: 'RATE_LIMITED',
} as const;

// Success Messages (Russian)
export const SUCCESS_MESSAGES = {
  PROFILE_UPDATED: '–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
  CHARACTER_CREATED: '–ü–µ—Ä—Å–æ–Ω–∞–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
  CHARACTER_UPDATED: '–ü–µ—Ä—Å–æ–Ω–∞–∂ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
  CHARACTER_DELETED: '–ü–µ—Ä—Å–æ–Ω–∞–∂ —É–¥–∞–ª–µ–Ω',
  SUBSCRIPTION_UPDATED: '–ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
  FILE_UPLOADED: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω',
  PASSWORD_CHANGED: '–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω',
  EMAIL_VERIFIED: 'Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
  SETTINGS_SAVED: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
} as const;

// Error Messages (Russian)
export const ERROR_MESSAGES = {
  GENERIC_ERROR: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
  NETWORK_ERROR: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.',
  SERVER_ERROR: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
  UNAUTHORIZED: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
  SESSION_EXPIRED: '–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.',
  VALIDATION_ERROR: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
  MESSAGE_LIMIT_EXCEEDED: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π. –û–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.',
  FILE_TOO_LARGE: '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π',
  INVALID_FILE_TYPE: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞',
  CHARACTER_LIMIT_EXCEEDED: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
  SUBSCRIPTION_REQUIRED: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
  RATE_LIMITED: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
} as const;

// ===========================================
// Grouped Exports (Barrel Pattern)
// ===========================================

/**
 * @namespace Subscription - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫ –∏ —Ç–∞—Ä–∏—Ñ–æ–≤
 */
export const Subscription = {
  PLANS: SUBSCRIPTION_PLANS,
  MESSAGE_LIMITS,
  UPLOAD_LIMITS_BY_TIER,
} as const;

/**
 * @namespace Characters - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
 */
export const Characters = {
  CATEGORIES: CHARACTER_CATEGORIES,
  PERSONALITY_TRAITS,
} as const;

/**
 * @namespace Validation - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
export const Validation = {
  PATTERNS: REGEX_PATTERNS,
  FILE_UPLOAD_LIMITS,
} as const;

/**
 * @namespace Localization - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
 */
export const Localization = {
  LANGUAGES: SUPPORTED_LANGUAGES,
  SUCCESS_MESSAGES,
  ERROR_MESSAGES,
} as const;

/**
 * @namespace API - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã API
 */
export const API = {
  ENDPOINTS: API_ENDPOINTS,
  ERROR_CODES,
} as const;

/**
 * @namespace UI - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
export const UI = {
  THEMES,
  ANIMATION_DURATION,
  BREAKPOINTS,
  Z_INDEX,
  DEFAULTS,
} as const;

/**
 * @namespace App - –û–±—â–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export const App = {
  STATUS: APP_STATUS,
  MESSAGE_TYPES,
} as const;

// ===========================================
// Utility Functions
// ===========================================

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ ID
 * @param planId - ID –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
 * @returns –ü–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ undefined
 */
export function getSubscriptionPlan(
  planId: SubscriptionPlanId
): SubscriptionPlan | undefined {
  return SUBSCRIPTION_PLANS[planId];
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ ID
 * @param categoryId - ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @returns –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ undefined
 */
export function getCharacterCategory(
  categoryId: CharacterCategoryId
): CharacterCategory | undefined {
  return CHARACTER_CATEGORIES[categoryId];
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —á–µ—Ä—Ç—É –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ ID
 * @param traitId - ID —á–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏
 * @returns –ß–µ—Ä—Ç–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ undefined
 */
export function getPersonalityTrait(
  traitId: PersonalityTraitId
): PersonalityTrait | undefined {
  return PERSONALITY_TRAITS[traitId];
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É
 * @param value - –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @param patternType - –¢–∏–ø –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @returns true –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ
 */
export function validateValue(
  value: string,
  patternType: ValidationPatternType
): boolean {
  const pattern = REGEX_PATTERNS[patternType];
  return pattern ? pattern.pattern.test(value) : false;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–∏–º–∏—Ç—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–∏–ø–∞ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param uploadType - –¢–∏–ø –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
 * @returns –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–∏–º–∏—Ç–æ–≤ —Ñ–∞–π–ª–∞
 */
export function getFileUploadLimits(
  uploadType: FileUploadType
): FileUploadConfig | undefined {
  return FILE_UPLOAD_LIMITS[uploadType];
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Ç–∏–ø —Ñ–∞–π–ª–∞
 * @param fileType - MIME —Ç–∏–ø —Ñ–∞–π–ª–∞
 * @param uploadType - –¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏
 * @returns true –µ—Å–ª–∏ —Ç–∏–ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
 */
export function isFileTypeSupported(
  fileType: string,
  uploadType: FileUploadType
): boolean {
  const limits = getFileUploadLimits(uploadType);
  return limits ? limits.allowedTypes.includes(fileType) : false;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
 * @param bytes - –†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
 * @returns –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 */
export function formatFileSize(bytes: number): string {
  if (bytes === 0) return '0 –ë';

  const sizes = ['–ë', '–ö–ë', '–ú–ë', '–ì–ë'];
  const i = Math.floor(Math.log(bytes) / Math.log(1024));

  return `${Math.round(bytes / Math.pow(1024, i))} ${sizes[i]}`;
}

// ===========================================
// Type Guards
// ===========================================

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º ID –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
 * @param value - –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @returns true –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è SubscriptionPlanId
 */
export function isSubscriptionPlanId(
  value: string
): value is SubscriptionPlanId {
  return value in SUBSCRIPTION_PLANS;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @param value - –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @returns true –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è CharacterCategoryId
 */
export function isCharacterCategoryId(
  value: string
): value is CharacterCategoryId {
  return value in CHARACTER_CATEGORIES;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º –∫–æ–¥–æ–º —è–∑—ã–∫–∞
 * @param value - –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @returns true –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è LanguageCode
 */
export function isLanguageCode(value: string): value is LanguageCode {
  return value in SUPPORTED_LANGUAGES;
}
